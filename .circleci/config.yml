# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - restore_cache:
          keys:
            - my-docker-cache-{{ .checksum "docker-compose.yml" }}
            - my-docker-cache
      # 2. キャッシュイメージ読み込み
      - run: if test -d ~/cache; then docker load -i ~/cache/image.tar; fi
      # 3. ビルド
      - run: docker build -t my-image .
      # 4. イメージ書き出し
      - run: mkdir -p ~/cache && docker save -o ~/cache/image.tar my-image $(docker history -q my-image | tail -n +2 | grep -v \<missing\> | tr '\n' ' ')
      # 5. キャッシュ保存
      - save_cache:
          key: my-docker-cache-{{ .checksum "docker-compose.yml" }}
          paths:
            - ~/cache

      # docker build
      - run:
          name: up docker
          command: docker-compose up -d

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: docker-compose exec php composer install -n --prefer-dist

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      # copy .env
      - run: cp .env.example .env

      - run: sleep 5
      - run: docker-compose exec mysql service mysql status
      - run: docker-compose exec php php artisan migrate:refresh --seed

      # exec tests!
      - run: docker-compose exec php ./vendor/bin/phpunit
